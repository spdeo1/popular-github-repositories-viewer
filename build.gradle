plugins {
    id 'java'
    id "org.barfuin.gradle.taskinfo" version "2.2.0"
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'

}

group = 'com.redcare.pharmacy.popular.respositories'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.github.tomakehurst:wiremock-standalone:3.0.1'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

task unitTest(type: Test) {
    useJUnitPlatform {
        include '**/*UTest.class'
    }
    failFast = true
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        include '**/**ITest.class'
    }
    failFast = true
}

task apiTest(type: Test) {
    useJUnitPlatform {
        include '**/**ApiTest.class'
    }
    failFast = true
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
tasks.jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/redcare/pharmacy/popular/respositories/client/dom/*",
                    "com/redcare/pharmacy/popular/respositories/controller/dom/*",
                    "com/redcare/pharmacy/popular/respositories/exception/dom/*",
                    "com/redcare/pharmacy/popular/respositories/PopularGithubRepositoriesViewerApplication.class"
            ])
        }))
    }

}




